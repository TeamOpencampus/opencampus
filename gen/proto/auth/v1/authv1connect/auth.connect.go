// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: proto/auth/v1/auth.proto

package authv1connect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	http "net/http"
	v1 "opencampus/gen/proto/auth/v1"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// AuthServiceName is the fully-qualified name of the AuthService service.
	AuthServiceName = "proto.auth.v1.AuthService"
)

// AuthServiceClient is a client for the proto.auth.v1.AuthService service.
type AuthServiceClient interface {
	Login(context.Context, *connect_go.Request[v1.LoginRequest]) (*connect_go.Response[v1.LoginResponse], error)
	Register(context.Context, *connect_go.Request[v1.RegisterRequest]) (*connect_go.Response[v1.RegisterResponse], error)
	VerifyEmail(context.Context, *connect_go.Request[v1.VerifyEmailRequest]) (*connect_go.Response[v1.VerifyEmailResponse], error)
	ResetPassword(context.Context, *connect_go.Request[v1.ResetPasswordRequest]) (*connect_go.Response[v1.ResetPasswordResponse], error)
}

// NewAuthServiceClient constructs a client for the proto.auth.v1.AuthService service. By default,
// it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses, and
// sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC()
// or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewAuthServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) AuthServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &authServiceClient{
		login: connect_go.NewClient[v1.LoginRequest, v1.LoginResponse](
			httpClient,
			baseURL+"/proto.auth.v1.AuthService/Login",
			opts...,
		),
		register: connect_go.NewClient[v1.RegisterRequest, v1.RegisterResponse](
			httpClient,
			baseURL+"/proto.auth.v1.AuthService/Register",
			opts...,
		),
		verifyEmail: connect_go.NewClient[v1.VerifyEmailRequest, v1.VerifyEmailResponse](
			httpClient,
			baseURL+"/proto.auth.v1.AuthService/VerifyEmail",
			opts...,
		),
		resetPassword: connect_go.NewClient[v1.ResetPasswordRequest, v1.ResetPasswordResponse](
			httpClient,
			baseURL+"/proto.auth.v1.AuthService/ResetPassword",
			opts...,
		),
	}
}

// authServiceClient implements AuthServiceClient.
type authServiceClient struct {
	login         *connect_go.Client[v1.LoginRequest, v1.LoginResponse]
	register      *connect_go.Client[v1.RegisterRequest, v1.RegisterResponse]
	verifyEmail   *connect_go.Client[v1.VerifyEmailRequest, v1.VerifyEmailResponse]
	resetPassword *connect_go.Client[v1.ResetPasswordRequest, v1.ResetPasswordResponse]
}

// Login calls proto.auth.v1.AuthService.Login.
func (c *authServiceClient) Login(ctx context.Context, req *connect_go.Request[v1.LoginRequest]) (*connect_go.Response[v1.LoginResponse], error) {
	return c.login.CallUnary(ctx, req)
}

// Register calls proto.auth.v1.AuthService.Register.
func (c *authServiceClient) Register(ctx context.Context, req *connect_go.Request[v1.RegisterRequest]) (*connect_go.Response[v1.RegisterResponse], error) {
	return c.register.CallUnary(ctx, req)
}

// VerifyEmail calls proto.auth.v1.AuthService.VerifyEmail.
func (c *authServiceClient) VerifyEmail(ctx context.Context, req *connect_go.Request[v1.VerifyEmailRequest]) (*connect_go.Response[v1.VerifyEmailResponse], error) {
	return c.verifyEmail.CallUnary(ctx, req)
}

// ResetPassword calls proto.auth.v1.AuthService.ResetPassword.
func (c *authServiceClient) ResetPassword(ctx context.Context, req *connect_go.Request[v1.ResetPasswordRequest]) (*connect_go.Response[v1.ResetPasswordResponse], error) {
	return c.resetPassword.CallUnary(ctx, req)
}

// AuthServiceHandler is an implementation of the proto.auth.v1.AuthService service.
type AuthServiceHandler interface {
	Login(context.Context, *connect_go.Request[v1.LoginRequest]) (*connect_go.Response[v1.LoginResponse], error)
	Register(context.Context, *connect_go.Request[v1.RegisterRequest]) (*connect_go.Response[v1.RegisterResponse], error)
	VerifyEmail(context.Context, *connect_go.Request[v1.VerifyEmailRequest]) (*connect_go.Response[v1.VerifyEmailResponse], error)
	ResetPassword(context.Context, *connect_go.Request[v1.ResetPasswordRequest]) (*connect_go.Response[v1.ResetPasswordResponse], error)
}

// NewAuthServiceHandler builds an HTTP handler from the service implementation. It returns the path
// on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewAuthServiceHandler(svc AuthServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	mux := http.NewServeMux()
	mux.Handle("/proto.auth.v1.AuthService/Login", connect_go.NewUnaryHandler(
		"/proto.auth.v1.AuthService/Login",
		svc.Login,
		opts...,
	))
	mux.Handle("/proto.auth.v1.AuthService/Register", connect_go.NewUnaryHandler(
		"/proto.auth.v1.AuthService/Register",
		svc.Register,
		opts...,
	))
	mux.Handle("/proto.auth.v1.AuthService/VerifyEmail", connect_go.NewUnaryHandler(
		"/proto.auth.v1.AuthService/VerifyEmail",
		svc.VerifyEmail,
		opts...,
	))
	mux.Handle("/proto.auth.v1.AuthService/ResetPassword", connect_go.NewUnaryHandler(
		"/proto.auth.v1.AuthService/ResetPassword",
		svc.ResetPassword,
		opts...,
	))
	return "/proto.auth.v1.AuthService/", mux
}

// UnimplementedAuthServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedAuthServiceHandler struct{}

func (UnimplementedAuthServiceHandler) Login(context.Context, *connect_go.Request[v1.LoginRequest]) (*connect_go.Response[v1.LoginResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("proto.auth.v1.AuthService.Login is not implemented"))
}

func (UnimplementedAuthServiceHandler) Register(context.Context, *connect_go.Request[v1.RegisterRequest]) (*connect_go.Response[v1.RegisterResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("proto.auth.v1.AuthService.Register is not implemented"))
}

func (UnimplementedAuthServiceHandler) VerifyEmail(context.Context, *connect_go.Request[v1.VerifyEmailRequest]) (*connect_go.Response[v1.VerifyEmailResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("proto.auth.v1.AuthService.VerifyEmail is not implemented"))
}

func (UnimplementedAuthServiceHandler) ResetPassword(context.Context, *connect_go.Request[v1.ResetPasswordRequest]) (*connect_go.Response[v1.ResetPasswordResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("proto.auth.v1.AuthService.ResetPassword is not implemented"))
}
